package silverback

import "net/http"

// A Handler is expected to be able to take a request and return a
// copy of itself based on that request.
type Handler interface {
	New(*http.Request) Handler
	Path() string
}

// A BeforeHandler is a controller type that needs to perform some
// operation before every request.
type BeforeHandler interface {
	Handler
	BeforeHandle() error
}

// An AfterHandler is a controller type that needs to perform some
// operation after every request.  It is passed the response that was
// generated by the request method, so that it can act based on the
// response's fields.
type AfterHandler interface {
	Handler
	AfterHandle(*Response) error
}

// A Getter is a controller type that can handle GET requests for a
// single instance of a resource.
//
// Note: HEAD requests will automatically map to
type Getter interface {
	Handler
	Get(identifier string) *Response
}

// A Querier is a controller type that can handle GET requests that
// query for multiple instances of a resource.
type Querier interface {
	Handler
	Query() *Response
}

// A Poster is a controller type that can handle POST requests.
type Poster interface {
	Handler
	Post() *Response
}

// A Putter is a controller type that can handle PUT requests.
type Putter interface {
	Handler
	Put(identifier string) *Response
}

// A Patcher is a controller type that can handle PATCH requests.
type Patcher interface {
	Handler
	Patch(identifier string) *Response
}

// A Deleter is a controller type that can handle DELETE requests.
type Deleter interface {
	Handler
	Delete(identifier string) *Response
}
